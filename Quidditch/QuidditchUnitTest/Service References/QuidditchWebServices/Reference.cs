//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuidditchUnitTest.QuidditchWebServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Match", Namespace="http://schemas.datacontract.org/2004/07/QuidditchWebServices")]
    [System.SerializableAttribute()]
    public partial class Match : QuidditchUnitTest.QuidditchWebServices.Entite {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateDuMatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomEquipeDomicileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomEquipeVisiteurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomStadeDuMatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrenomNomArbitreDuMatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScoreEquipeDomicileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScoreEquipeVisiteurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] StringReservationsPourLeMatchField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateDuMatch {
            get {
                return this.DateDuMatchField;
            }
            set {
                if ((this.DateDuMatchField.Equals(value) != true)) {
                    this.DateDuMatchField = value;
                    this.RaisePropertyChanged("DateDuMatch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NomEquipeDomicile {
            get {
                return this.NomEquipeDomicileField;
            }
            set {
                if ((object.ReferenceEquals(this.NomEquipeDomicileField, value) != true)) {
                    this.NomEquipeDomicileField = value;
                    this.RaisePropertyChanged("NomEquipeDomicile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NomEquipeVisiteur {
            get {
                return this.NomEquipeVisiteurField;
            }
            set {
                if ((object.ReferenceEquals(this.NomEquipeVisiteurField, value) != true)) {
                    this.NomEquipeVisiteurField = value;
                    this.RaisePropertyChanged("NomEquipeVisiteur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NomStadeDuMatch {
            get {
                return this.NomStadeDuMatchField;
            }
            set {
                if ((object.ReferenceEquals(this.NomStadeDuMatchField, value) != true)) {
                    this.NomStadeDuMatchField = value;
                    this.RaisePropertyChanged("NomStadeDuMatch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrenomNomArbitreDuMatch {
            get {
                return this.PrenomNomArbitreDuMatchField;
            }
            set {
                if ((object.ReferenceEquals(this.PrenomNomArbitreDuMatchField, value) != true)) {
                    this.PrenomNomArbitreDuMatchField = value;
                    this.RaisePropertyChanged("PrenomNomArbitreDuMatch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScoreEquipeDomicile {
            get {
                return this.ScoreEquipeDomicileField;
            }
            set {
                if ((this.ScoreEquipeDomicileField.Equals(value) != true)) {
                    this.ScoreEquipeDomicileField = value;
                    this.RaisePropertyChanged("ScoreEquipeDomicile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScoreEquipeVisiteur {
            get {
                return this.ScoreEquipeVisiteurField;
            }
            set {
                if ((this.ScoreEquipeVisiteurField.Equals(value) != true)) {
                    this.ScoreEquipeVisiteurField = value;
                    this.RaisePropertyChanged("ScoreEquipeVisiteur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] StringReservationsPourLeMatch {
            get {
                return this.StringReservationsPourLeMatchField;
            }
            set {
                if ((object.ReferenceEquals(this.StringReservationsPourLeMatchField, value) != true)) {
                    this.StringReservationsPourLeMatchField = value;
                    this.RaisePropertyChanged("StringReservationsPourLeMatch");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Entite", Namespace="http://schemas.datacontract.org/2004/07/QuidditchWebServices")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(QuidditchUnitTest.QuidditchWebServices.Reservation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(QuidditchUnitTest.QuidditchWebServices.Match))]
    public partial class Entite : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdentifiantField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Identifiant {
            get {
                return this.IdentifiantField;
            }
            set {
                if ((this.IdentifiantField.Equals(value) != true)) {
                    this.IdentifiantField = value;
                    this.RaisePropertyChanged("Identifiant");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Reservation", Namespace="http://schemas.datacontract.org/2004/07/QuidditchWebServices")]
    [System.SerializableAttribute()]
    public partial class Reservation : QuidditchUnitTest.QuidditchWebServices.Entite {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PrixField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Place {
            get {
                return this.PlaceField;
            }
            set {
                if ((this.PlaceField.Equals(value) != true)) {
                    this.PlaceField = value;
                    this.RaisePropertyChanged("Place");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Prix {
            get {
                return this.PrixField;
            }
            set {
                if ((this.PrixField.Equals(value) != true)) {
                    this.PrixField = value;
                    this.RaisePropertyChanged("Prix");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="QuidditchWebServices.IServiceMatch")]
    public interface IServiceMatch {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/GetAllMatches", ReplyAction="http://tempuri.org/IServiceMatch/GetAllMatchesResponse")]
        QuidditchUnitTest.QuidditchWebServices.Match[] GetAllMatches();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/GetAllMatches", ReplyAction="http://tempuri.org/IServiceMatch/GetAllMatchesResponse")]
        System.Threading.Tasks.Task<QuidditchUnitTest.QuidditchWebServices.Match[]> GetAllMatchesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceMatchChannel : QuidditchUnitTest.QuidditchWebServices.IServiceMatch, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceMatchClient : System.ServiceModel.ClientBase<QuidditchUnitTest.QuidditchWebServices.IServiceMatch>, QuidditchUnitTest.QuidditchWebServices.IServiceMatch {
        
        public ServiceMatchClient() {
        }
        
        public ServiceMatchClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceMatchClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceMatchClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceMatchClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public QuidditchUnitTest.QuidditchWebServices.Match[] GetAllMatches() {
            return base.Channel.GetAllMatches();
        }
        
        public System.Threading.Tasks.Task<QuidditchUnitTest.QuidditchWebServices.Match[]> GetAllMatchesAsync() {
            return base.Channel.GetAllMatchesAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="QuidditchWebServices.IServiceReservation")]
    public interface IServiceReservation {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReservation/GetReservationForOneMatch", ReplyAction="http://tempuri.org/IServiceReservation/GetReservationForOneMatchResponse")]
        QuidditchUnitTest.QuidditchWebServices.Reservation[] GetReservationForOneMatch(int idMatch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReservation/GetReservationForOneMatch", ReplyAction="http://tempuri.org/IServiceReservation/GetReservationForOneMatchResponse")]
        System.Threading.Tasks.Task<QuidditchUnitTest.QuidditchWebServices.Reservation[]> GetReservationForOneMatchAsync(int idMatch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReservation/AddReservation", ReplyAction="http://tempuri.org/IServiceReservation/AddReservationResponse")]
        int AddReservation(QuidditchUnitTest.QuidditchWebServices.Reservation reservation, int idMatch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReservation/AddReservation", ReplyAction="http://tempuri.org/IServiceReservation/AddReservationResponse")]
        System.Threading.Tasks.Task<int> AddReservationAsync(QuidditchUnitTest.QuidditchWebServices.Reservation reservation, int idMatch);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceReservationChannel : QuidditchUnitTest.QuidditchWebServices.IServiceReservation, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceReservationClient : System.ServiceModel.ClientBase<QuidditchUnitTest.QuidditchWebServices.IServiceReservation>, QuidditchUnitTest.QuidditchWebServices.IServiceReservation {
        
        public ServiceReservationClient() {
        }
        
        public ServiceReservationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceReservationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceReservationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceReservationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public QuidditchUnitTest.QuidditchWebServices.Reservation[] GetReservationForOneMatch(int idMatch) {
            return base.Channel.GetReservationForOneMatch(idMatch);
        }
        
        public System.Threading.Tasks.Task<QuidditchUnitTest.QuidditchWebServices.Reservation[]> GetReservationForOneMatchAsync(int idMatch) {
            return base.Channel.GetReservationForOneMatchAsync(idMatch);
        }
        
        public int AddReservation(QuidditchUnitTest.QuidditchWebServices.Reservation reservation, int idMatch) {
            return base.Channel.AddReservation(reservation, idMatch);
        }
        
        public System.Threading.Tasks.Task<int> AddReservationAsync(QuidditchUnitTest.QuidditchWebServices.Reservation reservation, int idMatch) {
            return base.Channel.AddReservationAsync(reservation, idMatch);
        }
    }
}
